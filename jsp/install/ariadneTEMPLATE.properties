##################
# Metadata store #
##################

# Metadata store query implementation
# Different implementations can be used for different languages by adding a number
# All other properties for the metadata store must correspond to the language number
#mdstore.query.implementation = org.ariadne_eu.metadata.query.QueryMetadataExistDbImpl
#mdstore.query.implementation = org.ariadne_eu.metadata.query.QueryMetadataIBMDB2DbImpl
#mdstore.query.implementation = org.ariadne_eu.metadata.query.QueryMetadataOracleDbImpl
mdstore.query.implementation = org.ariadne_eu.metadata.query.QueryMetadataLuceneImpl
mdstore.query.implementation.0 = org.ariadne_eu.metadata.query.QueryMetadataLuceneImpl
mdstore.query.implementation.1 = org.ariadne_eu.metadata.query.QueryMetadataLuceneImpl
mdstore.query.implementation.2 = org.ariadne_eu.metadata.query.QueryMetadataLuceneImpl
mdstore.query.implementation.3 = org.ariadne_eu.metadata.query.QueryMetadataLuceneImpl

# Metadata store insert implementation
# All different implementations will be used for storing the metadata simultaneously
# Must correspond to the query implementations
#mdstore.insert.implementation = org.ariadne_eu.metadata.insert.InsertMetadataExistDbImpl
#mdstore.insert.implementation = org.ariadne_eu.metadata.insert.InsertMetadataIBMDB2DbImpl
#mdstore.insert.implementation = org.ariadne_eu.metadata.insert.InsertMetadataOracleDbImpl
mdstore.insert.implementation = org.ariadne_eu.metadata.insert.InsertMetadataFSImpl
mdstore.insert.implementation.1 = org.ariadne_eu.metadata.insert.InsertMetadataLuceneImpl
#mdstore.insert.implementation.2 = org.ariadne_eu.metadata.insert.InsertMetadataSpiForwardImpl

# Metadata storage location
# If this location doesn't exist yet, it will be created at the first metadata insert. //TODO
#mdstore.db.uri = xmldb:exist://server:port/exist/xmlrpc/db/DBNAME
#mdstore.db.uri = jdbc:db2://server:port/DBNAME
#mdstore.db.uri = jdbc:oracle:thin:@server:port:DBNAME

# Storage username and password
# The user must be able to insert and search
# If the database location doesn't exist, the user must be able to create the database location
#mdstore.db.username = user
#mdstore.db.password = pass

# Location where the metadata will be stored within the xml store.
#mdstore.db.xmldb.loc = collection("collectionname")
mdstore.db.xmldb.loc = db2-fn:xmlcolumn(\"TABLENAME.XMLFIELD\")
mdstore.db.xmldb.sql.tablename = Tablename
mdstore.db.xmldb.sql.columnname = XMLFIELD
mdstore.db.xmldb.sql.idcolumnname = GLOBAL_IDENTIFIER

# Lucene Metadata storage location
# Lucene document handler - By default: SAXXMLHandler
# Lucene xqueries used to find the identifier in a lom instance: all xpath queries will be tried in order until a valid identifier has been found
mdstore.lucene.indexdir = /Sandbox/temp/AriadneWS/repository/index/
#mdstore.lucene.handler = org.ariadne_eu.metadata.insert.lucene.document.LOMHandler
mdstore.lucene.handler = org.ariadne_eu.metadata.insert.lucene.document.MACELOMHandler
#mdstore.lucene.handler = org.ariadne_eu.metadata.insert.lucene.document.CAMHandler
mdstore.lucene.analyzer = org.ariadne_eu.utils.lucene.analysis.LOMDocumentAnalyzer
#mdstore.lucene.analyzer = org.ariadne_eu.utils.lucene.analysis.CAMDocumentAnalyzer
#mdstore.lucene.reindex = org.ariadne_eu.metadata.insert.lucene.indexer.ReIndexIBMDB2DbImpl
mdstore.lucene.reindex = org.ariadne_eu.metadata.insert.lucene.indexer.ReIndexFSImpl
mdstore.lucene.xpathquery.identifier.1 = metaMetadata/identifier/catalog[text()="oai"]/parent::*/entry/text()
mdstore.lucene.xpathquery.identifier.2 = general/identifier/catalog[text()="oai"]/parent::*/entry/text()
mdstore.lucene.xpathquery.identifier.3 = metaMetadata/identifier/entry/text()
mdstore.lucene.xpathquery.identifier.4 = general/identifier/entry/text()

# SPI Forward parameters (end with .2 because the "mdstore.insert.implementation.2" parameter ends with .2
mdstore.spiforward.sm.url.2 = http://ariadne.cs.kuleuven.be/repotest/services/SqiSessionManagement
mdstore.spiforward.spi.url.2 = http://ariadne.cs.kuleuven.be/repotest/services/SPI
mdstore.spiforward.sm.username.2 = user
mdstore.spiforward.sm.password.2 = pass

# Namespace used when inserting lom instances.
# The namespace must be set to enable querying the inserted instances
# If no namespace is used, this field must simply be removed from this config file
# example lom: <lom xmlns="http://ltsc.ieee.org/xsd/LOMv1p0"><general> ...
#mdstore.xmlns.xsd = http://ltsc.ieee.org/xsd/LOMv1p0
mdstore.insert.xmlns.xsd = http://ltsc.ieee.org/xsd/LOM

# Solr Result Format
mdstore.solr.instancedir = /usr/local/apache-tomcat-5.5.26/webapps/repository/solr/
mdstore.solr.facetfield.1 = lom.educational.learningresourcetype.value
mdstore.solr.facetfield.2 = lom.classification.taxonpath.taxon.entry.string.exact
mdstore.solr.facetfield.3 = lom.classification.purpose.value.exact

# Protege Web Services
mdstore.lucene.analyzer.mace.classification = /usr/local/apache-tomcat-5.5.26/webapps/repository/install/MACE_LOM_Category_9_CLASSIFICATION.xml

# Ranking Services
mdstore.rf.rlom.url = http://localhost:2481/MetricServiceInterface/services/RankingMetrics
mdstore.rf.rlom.rankingmetric = nofDownloadsperObject

# FS parameters
mdstore.spifs.dir = /Sandbox/temp/AriadneWS/mace/mdstore/

#xquery.wholeword must be set to false for db2
#default value is true
mdstore.xquery.wholeword = false

#################
# Content store #
#################

# Content store retrieve implementation
# Currently only one implementation supported
cntstore.retrieve.implementation = org.ariadne_eu.content.retrieve.RetrieveContentExistDbImpl
#cntstore.retrieve.implementation = org.ariadne_eu.content.retrieve.RetrieveContentIBMDB2DbImpl
#cntstore.retrieve.implementation = org.ariadne_eu.content.retrieve.RetrieveContentOracleDbImpl

# Content store insert implementation
# All different implementations will be used for storing the content simultaneously
# Must correspond to the query implementations
cntstore.insert.implementation = org.ariadne_eu.content.insert.InsertContentExistDbImpl
#cntstore.insert.implementation = org.ariadne_eu.content.insert.InsertContentIBMDB2DbImpl
#cntstore.insert.implementation = org.ariadne_eu.content.insert.InsertContentOracleDbImpl
#cntstore.insert.implementation.1 = org.ariadne_eu.content.insert.InsertContentSpiForwardImpl

# Storage location
# If this location doesn't exist yet, it will be created at the first metadata insert.
cntstore.db.uri = xmldb:exist://server:port/exist/xmlrpc/db/DBNAME
#cntstore.db.uri = jdbc:db2://server:port/DBNAME
#cntstore.db.uri = jdbc:oracle:thin:@server:port:DBNAME

# Storage username and password
# The user must be able to insert and search
# If the database location doesn't exist, the user must be able to create the database location
cntstore.db.username = user
cntstore.db.password = pass

# Location where the metadata will be stored within the xml store.
#cntstore.db.xmldb.loc = collection("contentstore")
cntstore.db.xmldb.loc = collection("collectionname")
#cntstore.db.xmldb.loc = db2-fn:xmlcolumn(\"TABLENAME.XMLFIELD\")
#cntstore.db.xmldb.sql.tablename = Tablename
#cntstore.db.xmldb.sql.columnname = XMLFIELD
#cntstore.db.xmldb.sql.idcolumnname = GLOBAL_IDENTIFIER

# Location on the filesystem where the uploaded files will be stored.
# If this location doesn't exist yet, it will be created at the first content insert
cntstore.dr.basepath = /Sandbox/temp/AriadneWS/repository/filestorage/

# SPI Forward parameters (end with .1 because the "cntstore.insert.implementation.1" parameter ends with .1
cntstore.spiforward.sm.url.1 = http://ariadne.cs.kuleuven.be/repotest/services/SqiSessionManagement
cntstore.spiforward.spi.url.1 = http://ariadne.cs.kuleuven.be/repotest/services/SPI
cntstore.spiforward.sm.username.1 = user
cntstore.spiforward.sm.password.1 = pass


############
#  OAICat  #
############

# This paramter is optional. Comment it out if you want the code to get the baseURL
# from the request instead. Setting it here is only necessary if your firewall messes
# with the request in a way that alters the baseURL from your expectations.
# OAIHandler.baseURL=http://localhost:8080/oaicat2/OAIHandler

# Uncomment this line if you want to include an XSL stylesheet reference
# in the OAI response so they can be rendered into HTML by browsers.
#OAIHandler.styleSheet=/oaicat/oaicat.xsl

# Uncomment this line if you want OAICat to render the responses into HTML on the server using
# OAIHandler.stylesheet when the request comes from an old browser.
#OAIHandler.renderForOldBrowsers=true

OAIHandler.useOaiIdScheme=false

AbstractCatalog.oaiCatalogClassName=org.ariadne_eu.oai.server.lucene.catalog.LuceneLomCatalog
AbstractCatalog.recordFactoryClassName=org.ariadne_eu.oai.server.lucene.catalog.LuceneLomRecordFactory
#AbstractCatalog.oaiCatalogClassName=org.ariadne_eu.oai.server.ibmdb2.catalog.IbmDb2LomCatalog
#AbstractCatalog.recordFactoryClassName=org.ariadne_eu.oai.server.ibmdb2.catalog.IbmDb2LomRecordFactory
AbstractCatalog.secondsToLive=3600

# Choose one of the following two
#AbstractCatalog.granularity=YYYY-MM-DD
AbstractCatalog.granularity=YYYY-MM-DDThh:mm:ssZ

# Change to include properties peculiar to your implementation of AbstractCatalog
IbmDb2LomCatalog.maxListSize=100
IbmDb2LomCatalog.db.column.datestamp = INSERTION_DATE

#LOMCatalog
LuceneLomCatalog.maxListSize=100
LuceneLomCatalog.dateField = date.insert
LuceneLomCatalog.identifierField = key

LuceneLomRecordFactory.repositoryIdentifier=oaicat.ariadne.org

Lucene2oai_lom.fullLomField = lom

# Custom Identify response values
Identify.adminEmail=ariadne@cs.kuleuven.be
Identify.repositoryName=AriadneNext Repository
Identify.earliestDatestamp=1000-01-01T00:00:00Z
Identify.deletedRecord=no
Identify.repositoryIdentifier=oaicat.ariadne.org

# This is the old way to specify <description><oai-identifier> for the Identify verb
#Identify.repositoryIdentifier=oaicat.oclc.org
#Identify.sampleIdentifier=oai:oaicat.oclc.org:OCLCNo/ocm00000012

# This is the new way to specify <description> elements in general for the Identify verb
# Append something unique like .1, .2, etc to 'Identify.description' for each occurrence
Identify.description.1=<description><oai-identifier xmlns=\"http://www.openarchives.org/OAI/2.0/oai-identifier\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai-identifier http://www.openarchives.org/OAI/2.0/oai-identifier.xsd\"><scheme>oai</scheme><repositoryIdentifier>oaicat.ariadne.org</repositoryIdentifier><delimiter>:</delimiter><sampleIdentifier>oai:oaicat.ariadne.org:hdl:OCLCNo/ocm00000012</sampleIdentifier></oai-identifier></description>

# List the supported metadataPrefixes along with the class that performs the associated crosswalk
#Crosswalks.oai_etdms=org.oclc.oai.server.crosswalk.FileMap2oai_etdms
#Crosswalks.oai_dc=org.oclc.oai.server.crosswalk.FileMap2oai_dc
#Crosswalks.oai_lom=org.ariadne_eu.oai.server.ibmdb2.crosswalk.IbmDb22oai_lom
Crosswalks.oai_lom=org.ariadne_eu.oai.server.lucene.crosswalk.Lucene2oai_lom

sets.list = C-H;KUL;XTEC;UL-FRI;INDIRE;EDUCATIO;FWU;MEC;CFL;MSU;TLF;NCTE;EUN;MESC;ARIADNE-ESPOL;BMBWK
sets.BMBWK.repositoryIdentifier = bildungspool.bildung.at
sets.C-H.repositoryIdentifier = melt.atomicassets.com
sets.KUL.repositoryIdentifier = ariadne.cs.kuleuven.be
sets.XTEC.repositoryIdentifier = merli.xtec.cat
sets.UL-FRI.repositoryIdentifier = oai.si.edus.si
sets.INDIRE.repositoryIdentifier = oaicat.indire.it
sets.EDUCATIO.repositoryIdentifier = sdt.sulinet.hu
sets.FWU.repositoryIdentifier = melt.fwu.de
sets.MEC.repositoryIdentifier = oai.cnice.mec.es
sets.CFL.repositoryIdentifier = melt.contento.se
sets.MSU.repositoryIdentifier = spindeln.iml.umu.se
sets.TLF.repositoryIdentifier = ait.opetaja.ee
sets.ARIADNE-ESPOL.repositoryIdentifier = ariadne.cti.espol.edu.ec
sets.NCTE.repositoryIdentifier = ncte.ie
sets.EUN.repositoryIdentifier = eun.org
sets.MESC.repositoryIdentifier = skolavefurinn.is

######################
# General properties #
######################

# SQI Insert username and password
# In the current version, an authenticated session must be created with these
# credentials for inserts.
repository.username = user
repository.password = pass

#log4j.properties = /Users/ben/IdeaProjects/AriadneRepository/repository/src/log4j.properties

#The directory where the log files are written
#NOTE : Do not forget the tailing "/" for the logDirectory
repository.log4j.directory = /Sandbox/temp/AriadneWS/repository/
repository.log4j.filename = repository

repository.dataDir = /Sandbox/temp/AriadneWS/repository/

# URL used for the jsp pages to contact the repository.
# This variable is not required unless the jsp pages are requested
# over an URL that cannot be used to reach the webservices
#axis2.url = http://miro.cs.kuleuven.be:2281/repotest/
