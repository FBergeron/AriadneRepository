######################
# General properties #
######################

# Repository username and password
repository.username = 
repository.password = 
repository.statickey = 

# Registry configuration 
registry.catalog = ariadne-registry

# Logging configuration
repository.log4j.directory = /Sandbox/temp/AriadneWS/
repository.log4j.filename = repository

# URL used for the jsp pages to contact the repository.
# This variable is not required unless the jsp pages are requested
# over an URL that cannot be used to reach the webservices
#axis2.url = http://miro.cs.kuleuven.be:2281/repotest/

##########
# Search #
##########
# Be sure that the InsertMetadataLuceneImpl is active as an insertion method of the metadata store!
# Lucene dir 
search.lucene.indexdir = /Sandbox/temp/AriadneWS/index/
search.lucene.inmemory = false

# Lucene Handler 
#search.lucene.handler = org.ariadne_eu.utils.lucene.document.GENERICHandler
search.lucene.handler = org.ariadne_eu.utils.lucene.document.LOMHandler
#search.lucene.handler = org.ariadne_eu.utils.lucene.document.LOMLiteHandler
#search.lucene.handler = org.ariadne_eu.utils.lucene.document.CAMHandler
#search.lucene.handler = org.ariadne_eu.utils.lucene.document.LODHandler
#search.lucene.handler = org.ariadne_eu.utils.lucene.document.CollectionHandler
#search.lucene.handler = org.ariadne_eu.utils.lucene.document.MACELOMHandler
#search.lucene.handler = org.ariadne_eu.utils.lucene.document.ICOPERLOMHandler

# Lucene Analyzer
#search.lucene.analyzer = org.ariadne_eu.utils.lucene.analysis.GENERICDocumentAnalyzer
search.lucene.analyzer = org.ariadne_eu.utils.lucene.analysis.LOMDocumentAnalyzer
#search.lucene.analyzer = org.ariadne_eu.utils.lucene.analysis.CAMDocumentAnalyzer
#search.lucene.analyzer = org.ariadne_eu.utils.lucene.analysis.LODDocumentAnalyzer
#search.lucene.analyzer = org.ariadne_eu.utils.lucene.analysis.CollectionDocumentAnalyzer

# Re-indexation
search.lucene.reindex = org.ariadne_eu.utils.lucene.reindex.ReIndexFSImpl
#search.lucene.reindex = org.ariadne_eu.utils.lucene.reindex.ReIndexExistDbImpl
#search.lucene.reindex = org.ariadne_eu.utils.lucene.reindex.ReIndexIBMDB2DbImpl
#search.lucene.reindex.maxqueryresults = 50
#search.xpath.query.identifier.1 = metaMetadata/identifier/catalog[text()="oai"]/parent::*/entry/text()
#search.xpath.query.identifier.2 = general/identifier/catalog[text()="oai"]/parent::*/entry/text()
#search.xpath.query.identifier.3 = metaMetadata/identifier/entry/text()
#search.xpath.query.identifier.4 = general/identifier/entry/text()
#search.xpath.query.identifier.5 = //general/identifier/entry/text()
#search.xpath.query.identifier.6 = //identifier/entry/text()
#search.xpath.query.identifier.7 = link/text()
#search.xpath.query.identifier.8 = //uri/text()
#search.xpath.query.identifier.9 = //identifier/text()
search.xpath.query.identifier.1 = //identifier/catalog[text()="ICOPER"]/parent::*/entry/text()

# Solr Result Format
search.solr.dataDir = /Sandbox/temp/AriadneWS/
#For AriadneJSON
search.solr.facetfield.1 = lom.general.language
search.solr.facetfield.2 = lom.technical.format
search.solr.facetfield.3 = lom.educational.context.value
search.solr.facetfield.4 = lom.educational.learningresourcetype.value
search.solr.facetfield.5 = collection
#For ICOPER
#search.solr.facetfield.1 = lom.metametadata.contribute.entity.provider
#search.solr.facetfield.2 = lom.educational.learningoutcome.identifier.entry
#search.solr.facetfield.3 = lom.classification.taxonpath.taxon.id
#search.solr.facetfield.4 = lom.classification.taxonpath.source.string
#search.solr.facetfield.5 = lom.classification.purpose.value
#For ?
#search.solr.facetfield.2 = lom.general.language
#search.solr.facetfield.3 = lom.technical.format
#search.solr.facetfield.4 = lom.educational.context.value
#search.solr.facetfield.5 = lom.educational.learningresourcetype.value
#search.solr.facetfield.6 = lom.metametadata.identifier.catalog
#search.solr.facetfield.7 = lom.rights.cost.value
#search.solr.facetfield.8 = lom.rights.copyrightAndOtherRestrictions.value
#search.solr.facetfield.9 = lom.classification.taxonpath.taxon.id
#search.solr.facetfield.10 = lom.lifecycle.contribute.entity
#search.solr.facetfield.11 = lom.general.identifier.catalog
#for MACE
#search.solr.facetfield.12 = lom.general.learningobjectkind.value
#search.solr.facetfield.13 = lom.classification.taxonpath.taxon.id.competency
#search.solr.facetfield.14 = lom.classification.taxonpath.taxon.id.domain
#search.solr.facetfield.15 = lom.classification.taxonpath.taxon.competency.eqf
#search.solr.facetfield.16 = lom.classification.taxonpath.taxon.domain.eqf
#search.solr.facetfield.17 = lom.classification.taxonpath.taxon.eqf
#search.solr.facetfield.18 = lom.classification.taxonpath.taxon.eqf.range



##################
# Metadata store #
##################
# Insertion
mdstore.insert.implementation = org.ariadne_eu.metadata.insert.InsertMetadataFSImpl
#mdstore.insert.implementation = org.ariadne_eu.metadata.insert.InsertMetadataIBMDB2DbImpl
#mdstore.insert.implementation = org.ariadne_eu.metadata.insert.InsertMetadataExistDbImpl
#mdstore.insert.implementation = org.ariadne_eu.metadata.insert.InsertMetadataOracleDbImpl
mdstore.insert.implementation.1 = org.ariadne_eu.metadata.insert.InsertMetadataLuceneImpl
#mdstore.insert.implementation.2 = org.ariadne_eu.metadata.insert.InsertMetadataSpiForwardImpl

# Deletion
mdstore.delete.implementation = org.ariadne_eu.metadata.delete.DeleteMetadataFSImpl
#mdstore.delete.implementation = org.ariadne_eu.metadata.delete.DeleteMetadataIBMDB2DbImpl
#mdstore.delete.implementation = org.ariadne_eu.metadata.delete.DeleteMetadataExistDbImpl
#mdstore.delete.implementation = org.ariadne_eu.metadata.delete.DeleteMetadataOracleDbImpl
mdstore.delete.implementation.1 = org.ariadne_eu.metadata.delete.DeleteMetadataLuceneImpl
#mdstore.delete.implementation.2 = org.ariadne_eu.metadata.delete.DeleteMetadataSpiForwardImpl

# Query
# Different implementations can be used for different languages by adding a number
# All other properties for the metadata store must correspond to the language number
#mdstore.query.implementation = org.ariadne_eu.metadata.query.QueryMetadataExistDbImpl
#mdstore.query.implementation = org.ariadne_eu.metadata.query.QueryMetadataIBMDB2DbImpl
#mdstore.query.implementation = org.ariadne_eu.metadata.query.QueryMetadataOracleDbImpl
#mdstore.query.implementation = org.ariadne_eu.metadata.query.QueryMetadataLuceneMImpl
#mdstore.query.implementation.0 = org.ariadne_eu.metadata.query.QueryMetadataLuceneMImpl
#mdstore.query.implementation.1 = org.ariadne_eu.metadata.query.QueryMetadataLuceneMImpl
#mdstore.query.implementation.2 = org.ariadne_eu.metadata.query.QueryMetadataLuceneMImpl
#mdstore.query.implementation.3 = org.ariadne_eu.metadata.query.QueryMetadataLuceneMImpl
#mdstore.query.implementation.4 = org.ariadne_eu.metadata.query.QueryMetadataLuceneMImpl
#mdstore.query.implementation.5 = org.ariadne_eu.metadata.query.QueryMetadataLuceneMImpl
#mdstore.query.implementation.6 = org.ariadne_eu.metadata.query.QueryMetadataLuceneMImpl
mdstore.query.implementation = org.ariadne_eu.metadata.query.QueryMetadataLuceneImpl
mdstore.query.implementation.0 = org.ariadne_eu.metadata.query.QueryMetadataLuceneImpl
mdstore.query.implementation.1 = org.ariadne_eu.metadata.query.QueryMetadataLuceneImpl
mdstore.query.implementation.2 = org.ariadne_eu.metadata.query.QueryMetadataLuceneImpl
mdstore.query.implementation.3 = org.ariadne_eu.metadata.query.QueryMetadataLuceneImpl
mdstore.query.implementation.4 = org.ariadne_eu.metadata.query.QueryMetadataLuceneImpl
mdstore.query.implementation.5 = org.ariadne_eu.metadata.query.QueryMetadataLuceneImpl
mdstore.query.implementation.6 = org.ariadne_eu.metadata.query.QueryMetadataLuceneImpl

# InsertMetadataFSImpl properties
mdstore.spifs.dir = /Volumes/HMDB_BU/Temp/AriadneWS/mdstoreICOPERLOD/

# InsertMetadataIBMDB2DbImpl properties
#mdstore.db.uri = jdbc:db2://localhost:50000/ariadne
#mdstore.db.xmldb.loc = db2-fn:xmlcolumn(\"METADATASTORE.LOMXML\")
#mdstore.db.xmldb.sql.tablename = METADATASTORE
#mdstore.db.xmldb.sql.columnname = LOMXML
#mdstore.db.xmldb.sql.idcolumnname = GLOBAL_IDENTIFIER
#mdstore.db.username = 
#mdstore.db.password = 

# InsertMetadataExistDbImpl properties
#mdstore.db.uri = xmldb:exist://localhost:8082/exist/xmlrpc/db/metadatastore
#mdstore.db.xmldb.loc = collection("metadatastore")
#mdstore.db.username = 
#mdstore.db.password = 

# InsertMetadataOracleDbImpl properties
#mdstore.db.uri = jdbc:oracle:thin:@localhost:11521:ARIADNE
#mdstore.db.username = 
#mdstore.db.password = 

# InsertMetadataSpiForwardImpl properties
#mdstore.spiforward.sm.url.2 = http://ariadne.cs.kuleuven.be/repotest/services/SqiSessionManagement
#mdstore.spiforward.spi.url.2 = http://ariadne.cs.kuleuven.be/repotest/services/SPI
#mdstore.spiforward.sm.username.2 = 
#mdstore.spiforward.sm.password.2 = 

# Namespace used when inserting lom instances.
# The namespace must be set to enable querying the inserted instances
# If no namespace is used, this field must simply be removed from this config file
# example lom: <lom xmlns="http://ltsc.ieee.org/xsd/LOMv1p0"><general> ...
#mdstore.insert.xmlns.xsd = http://ltsc.ieee.org/xsd/LOMv1p0
mdstore.insert.xmlns.xsd = http://ltsc.ieee.org/xsd/LOM

#xquery.wholeword must be set to false for db2
#default value is true
mdstore.xquery.wholeword = false

#################
# Content store #
#################
# Location on the filesystem where the uploaded files will be stored.
# If this location doesn't exist yet, it will be created at the first content insert
cntstore.dr.basepath = /Sandbox/temp/AriadneWS/cntstore/
cntstore.md.xpathquery.location.1 = technical/location/text()
#cntstore.md.xpathquery.location.1 = manifestation/parameter/value[text()="imscc_v1p0"]/parent::*/parent::*/item/location/uri/text()
#cntstore.md.xpathquery.location.1 = general/identifier/catalog[text()="hdl"]/parent::*/entry/text()

#Insertion
# Content store insert implementation
# All different implementations will be used for storing the content simultaneously
# Must correspond to the query implementations
cntstore.insert.implementation = org.ariadne_eu.content.insert.InsertContentFSImpl
#cntstore.insert.implementation = org.ariadne_eu.content.insert.InsertContentIBMDB2DbImpl
#cntstore.insert.implementation = org.ariadne_eu.content.insert.InsertContentExistDbImpl
#cntstore.insert.implementation = org.ariadne_eu.content.insert.InsertContentOracleDbImpl
#cntstore.insert.implementation.1 = org.ariadne_eu.content.insert.InsertContentSpiForwardImpl

#Retrival
# Content store retrieve implementation
# Currently only one implementation supported
cntstore.retrieve.implementation = org.ariadne_eu.content.retrieve.RetrieveContentFSImpl
#cntstore.retrieve.implementation = org.ariadne_eu.content.retrieve.RetrieveContentIBMDB2DbImpl
#cntstore.retrieve.implementation = org.ariadne_eu.content.retrieve.RetrieveContentExistDbImpl
#cntstore.retrieve.implementation = org.ariadne_eu.content.retrieve.RetrieveContentOracleDbImpl

# InsertContentIBMDB2DbImpl properties
#cntstore.db.uri = jdbc:db2://localhost:50000/ariadne
#cntstore.db.xmldb.loc = db2-fn:xmlcolumn(\"CONTENTSTORE.CONTENTXML\")
#cntstore.db.xmldb.sql.tablename = CONTENTSTORE
#cntstore.db.xmldb.sql.columnname = CONTENTXML
#cntstore.db.xmldb.sql.idcolumnname = GLOBAL_IDENTIFIER
#cntstore.db.username = 
#cntstore.db.password = 

# InsertContentExistDbImpl properties
#cntstore.db.uri = xmldb:exist://localhost:8082/exist/xmlrpc/db/contentstore
#cntstore.db.xmldb.loc = collection("contentstore")
#cntstore.db.username = 
#cntstore.db.password = 

# InsertContentOracleDbImpl properties
#cntstore.db.uri = jdbc:oracle:thin:@localhost:11521:MELTMET
#cntstore.db.username = 
#cntstore.db.password = 

# InsertContentSpiForwardImpl properties
#cntstore.spiforward.sm.url.1 = http://ariadne.cs.kuleuven.be/repotest/services/SqiSessionManagement
#cntstore.spiforward.spi.url.1 = http://ariadne.cs.kuleuven.be/repotest/services/SPI
#cntstore.spiforward.sm.username.1 = 
#cntstore.spiforward.sm.password.1 = 


############
#  OAICat  #
############
# General catalog
oaicat.server.catalog.seconds2live=3600
oaicat.server.catalog.granularity=YYYY-MM-DDThh:mm:ssZ
#AbstractCatalog.granularity=YYYY-MM-DD
oaicat.server.catalog.maxlistsize=100

# Identification
oaicat.identify.email = ariadne@cs.kuleuven.be
oaicat.identify.reponame = AriadneNext Repository
oaicat.identify.earliestdatestamp = 1000-01-01T00:00:00Z
oaicat.identify.deletedrecord = no
oaicat.identify.repoid = oaicat.ariadne.org
#oaicat.identify.description.1 = <description><oai-identifier xmlns=\"http://www.openarchives.org/OAI/2.0/oai-identifier\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai-identifier http://www.openarchives.org/OAI/2.0/oai-identifier.xsd\"><scheme>oai</scheme><repositoryIdentifier>oaicat.ariadne.org</repositoryIdentifier><delimiter>:</delimiter><sampleIdentifier>oai:oaicat.ariadne.org:hdl:OCLCNo/ocm00000012</sampleIdentifier></oai-identifier></description>
oaicat.identify.sampleid=oai:oaicat.oclc.org:OCLCNo/ocm00000012

# List the supported metadataPrefixes along with the class that performs the associated crosswalk
#oaicat.crosswalk.oai_etdms = org.oclc.oai.server.crosswalk.FileMap2oai_etdms
#oaicat.crosswalk.oai_dc = org.oclc.oai.server.crosswalk.FileMap2oai_dc
#oaicat.crosswalk.oai_lom = org.ariadne_eu.oai.server.ibmdb2.crosswalk.IbmDb22oai_lom

# Lucene2oai
#oaicat.server.catalog.class = org.ariadne_eu.oai.server.lucene.catalog.LuceneLomCatalog
#oaicat.server.catalog.record.class = org.ariadne_eu.oai.server.lucene.catalog.LuceneLomRecordFactory
oaicat.server.catalog.field.md = md
oaicat.server.catalog.field.date = date.insert
oaicat.server.catalog.field.id = key
oaicat.server.catalog.field.set = collection
#oaicat.crosswalk.oai_lom = org.ariadne_eu.oai.server.lucene.crosswalk.Lucene2oai_lom

# IbmDb22oai
#oaicat.server.catalog.class = org.ariadne_eu.oai.server.ibmdb2.catalog.IbmDb2LomCatalog
#oaicat.server.catalog.record.class = org.ariadne_eu.oai.server.ibmdb2.catalog.IbmDb2LomRecordFactory
#oaicat.server.catalog.db.column.date = INSERTION_DATE

# FS2oai
oaicat.server.catalog.class = org.ariadne.oai.server.filesystem.catalog.FileSystemLomCatalog
oaicat.server.catalog.record.class = org.ariadne.oai.server.filesystem.catalog.FileSystemLomRecordFactory
oaicat.server.catalog.fs.ext = xml
oaicat.crosswalk.oai_lom = org.ariadne.oai.server.filesystem.crosswalk.FileSystem2oai_lom
#oaicat.crosswalk.oai_dc = org.ariadne.oai.server.filesystem.crosswalk.FileSystem2oai_lom

# Sets
oaicat.sets.ARIADNE.repoid = ARIADNE

# Extras
#oaicat.handler.baseurl=http://localhost:8080/oaicat2/OAIHandler
oaicat.handler.stylesheet=../oaitarget.xsl
#oaicat.handler.render4oldbrowsers=true
oaicat.handler.useoaischeme = false

#################
# MACE Services #
#################
mace.oai.aloe.target = http://mace.dfki.uni-kl.de/cgi-bin/oai_aloe.pl
mace.oai.aloe.mdprefix = mace_lom
search.lucene.handler.mace = /Sandbox/app/apache-tomcat-5.5.26/webapps/repository/install/MACE_LOM_Category_9_CLASSIFICATION_v5.xml


#################
# APP Services  #
#################
app.baseURL=http://localhost:8080/repository/
app.workspace.title = Ariadne SPI workspace
app.collection.title = Ariadne SPI collection
app.metadataSchema.1 = http://ltsc.ieee.org/xsd/LOM/loose
app.metadataSchema.2 = http://www.share-tec.eu/validation/ShareTEC/minimal
app.publishMetadata = yes
